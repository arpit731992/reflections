When would you want to use a remote repository rather than keeping all your work local?

  when i want to share my work with others and when i have to showcase my projects or
  add other developers for the their reviews and help.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

  Because if there are many people working on a repository /project anything which is being pushed by them will be updated to the local machine
  which we don not want until we have a look at it ourselves.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

  fork - cloning of a github repository into your own account on github(you can clone it back to your computer afterwards.Any changes in your forked repository wont effect original repository)
  clones - you can clone any local repository by cmd git clone localrepositorypath
           you can clone any repository into your local machine by git clone repository_url. which will have the remote name origin directing towards the original repository.
  branches - git branch branch_name will create a new branch. It is usefull for doing experiments or adding a new feature which you are not sure will work or when allowing others to contribute
             so they can work on their on own branch without affecting the master branch.

  fork use - when making changes into someone's else repository to use it for ourselves.
  clones use - when we need a copy of the project or repository from local path or github url.
  branches use - for experiments , new features, modes ,contributers etc.

What is the benefit of having a copy of the last known state of the remote stored locally?

  in case when there is a new commit in both github and local machine, where both commits are different
  to get a merged copy of both we can use git fetch followed by git merge origin/master master or git pull origin master.
  
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

  i can always without git or github i would have to talk to the person and make changes in their presence
  which will be very difficult for large projects.
  but done that, the update can be done easily with common interaction and conversation.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

  when i am adding a new feature and i need to make a pull request so that it is clarified by the owner to merge my branch into masters
  where in merging directly to the master can be problem if the owner doent wants that to be added or if there is a errro that i couldn't know but others find out.
